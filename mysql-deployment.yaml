# Define a 'Service' to expose MySQL to other services
apiVersion: v1
kind: Service
metadata:
  name: mysql  # DNS name 
  labels:
    app: mysql
    tier: database
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql
    tier: database
  clusterIP: None  # We use DNS, thus ClusterIP is not relevant

---
# Configure 'Deployment' of MySQL server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database
spec:
  selector:
    matchLabels:
      app: mysql
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
        tier: database
    spec:
      containers:
        - image: mysql:5.7  # Image from Docker Hub
          args:
            - "--ignore-db-dir=lost+found"  # Workaround for https://github.com/docker-library/mysql/issues/186
          name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD  # Setting root password of MySQL from a 'Secret'
              valueFrom:
                secretKeyRef:
                  name: db-root-credentials  # Name of the 'Secret'
                  key: LW4gJ2FkbWluMTIzJyANCg==  # 'key' inside the Secret which contains the required 'value'
            - name: MYSQL_USER  # Setting user username on MySQL from a 'Secret'
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: LW4gJ2x3X0Rlc3R1c2VyJyANCg==
            - name: MYSQL_PASSWORD  # Setting user password on MySQL from a 'Secret'
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: LW4gJ2x3X0Rlc3R1c2VyQDEyMycgDQo=
            - name: MYSQL_DATABASE  # Setting database name from a 'ConfigMap'
              valueFrom:
                configMapKeyRef:
                  name: db-conf
                  key: name
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:  # Mounting volume obtained from Persistent Volume Claim
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql  # This is the path in the container on which the mounting will take place.
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: project-pvc1

